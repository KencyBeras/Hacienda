@model CrudHacienda.Models.ProductosCLS

@{
    ViewBag.Title = "EditarProductos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>EditarProductos</h2>
@using (Html.BeginForm("EditarProductos", "Productos", FormMethod.Post, new { @id = "frmedite" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductosCLS</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.IdProducto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdProducto, new { htmlAttributes = new { @class = "form-control", @readOnly = true } })
                @Html.ValidationMessageFor(model => model.IdProducto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Producto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Producto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Producto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="Estado" name="Estado">
                    <option value="">Seleccionar...</option>
                    <option value=1 @(Model.Estado == 1 ? "Selected" : "")>Activo</option>
                    <option value=0 @(Model.Estado == 0 ? "Selected" : "")>Inactivo</option>
                </select>
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaActualizacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaActualizacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaActualizacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<!--Scripts validation-->
<script>
    var frmedite = document.getElementById("frmedite");
    frmedite.onsubmit = function (e)
    {
        e.preventDefault();
        if (confirm("Seguro que deseas realizar los cambios?") == 1) {
            frmedite.submit();
        }
    }
</script>